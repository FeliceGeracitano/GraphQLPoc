{"version":3,"sources":["../../src/schema/schema.js"],"names":["hello","type","args","name","resolve","root","params","info","getFields","RootQuery","description","fields","module","exports","query"],"mappings":";;AAAA;;AAEA;AACA,IAAMA,QAAQ;AACZC,8BADY;AAEZC,QAAM;AACJC,UAAM,EAAEF,4BAAF;AADF,GAFM;AAKZG,SALY,mBAKJC,IALI,EAKEC,MALF,EAKUC,IALV,EAKgB;AAC1B;AACD;AAPW,CAAd;;AAUA,IAAMC,YAAY,SAAZA,SAAY;AAAA,SAAO,EAAER,YAAF,EAAP;AAAA,CAAlB;;AAEA,IAAMS,YAAY,+BAAsB;AACtCN,QAAM,eADgC;AAEtCO,eAAa,aAFyB;AAGtCC,UAAQH;AAH8B,CAAtB,CAAlB;;AAMAI,OAAOC,OAAP,GAAiB,2BAAkB;AACjCC,SAAOL;AAD0B,CAAlB,CAAjB","file":"schema.js","sourcesContent":["import { GraphQLSchema, GraphQLObjectType, GraphQLString } from 'graphql';\n\n// Fields\nconst hello = {\n  type: GraphQLString,\n  args: {\n    name: { type: GraphQLString }\n  },\n  resolve(root, params, info) {\n    debugger;\n  }\n};\n\nconst getFields = () => ({ hello });\n\nconst RootQuery = new GraphQLObjectType({\n  name: 'RootQueryType',\n  description: 'Return name',\n  fields: getFields()\n});\n\nmodule.exports = new GraphQLSchema({\n  query: RootQuery\n});\n"]}